@{
    ViewData["Title"] = "Home";
}

<div class="container mt-4">
    <h1 class="text-center mb-4" id="welcomeMessage">Benvenuto!</h1>

    <div class="row row-cols-1 row-cols-md-2 g-4">
        <div class="col">
            <div class="card shadow-lg h-100" style="border-radius: 15px;">
                <div class="card-body">
                    @await Html.PartialAsync("ListaProgetti")
                </div>
            </div>
        </div>

        <div class="col">
            <div class="card shadow-lg h-100" id="createProject" style="border-radius: 15px; display: none;">
                <div class="card-body">
                    @await Html.PartialAsync("CreaProgetto")
                </div>
            </div>
        </div>

        <div class="col">
            <div class="card shadow-lg h-100" style="border-radius: 15px;">
                <div class="card-body">
                    @await Html.PartialAsync("UnioneProgetto")
                </div>
            </div>
        </div>

        <div class="col">
            <div class="card shadow-lg h-100" style="border-radius: 15px;">
                <div class="card-body">
                   
                    <div id="chartContainer" style="width: 100%; text-align: center;">
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>


@section Scripts {
    <script>
        function getCookie(name) {
            let decodedCookie = decodeURIComponent(document.cookie);
            let ca = decodedCookie.split(';');
            for (let i = 0; i < ca.length; i++) {
                let c = ca[i].trim();
                if (c.indexOf(name + "=") === 0) {
                    return c.substring(name.length + 1, c.length);
                }
            }
            return "";
        }

        async function getUserProfile() {
            const userId = getCookie('userId');
            if (!userId) {
                window.location.href = "/Aut/Login";
                return;
            }

            try {
                const response = await fetch(`/api/utente/utente/${userId}`);
                if (!response.ok) return;

                const responseData = await response.json();
                if (!responseData) {
                    console.error('Dati utente non validi');
                    return;
                }

                document.getElementById('welcomeMessage').innerText = `Benvenuto, ${responseData.nome}!`;
                document.getElementById('createProject').style.display = responseData.ruolo === 0 ? 'block' : 'none';
            } catch (error) {
                console.error('Errore API:', error);
            }
        }

        async function iscriviUtente() {
            const codice = document.getElementById('codice').value;
            const password = document.getElementById('password.unione').value;
            const userId = getCookie('userId');

            try {
                const response = await fetch(`/api/Progetti/iscrizione/${userId}`, {
                    method: 'POST',
                    body: new URLSearchParams({ codice, password }),
                    headers: { 'Content-Type': 'application/x-www-form-urlencoded' }
                });

               

                if (!response.ok) {
                   
                    const errorText = await response.text();
                   

                    try {
                        const errorData = JSON.parse(errorText);
                        alert('Errore nell\'iscrizione al progetto: ' + errorData.Message);
                    } catch (jsonError) {
                        
                        alert(`Errore nell'iscrizione: ${response.statusText}`);
                    }

                    return;
                }

           
                const textResponse = await response.text();
               

                if (!textResponse) {
                   
                    alert("Errore sconosciuto: risposta vuota dal server.");
                    return;
                }

                try {
                    const result = JSON.parse(textResponse);
                   
                    window.location.href = "/Home/Index";
                } catch (jsonError) {
                    console.error("Errore nel parsing JSON:", jsonError);
                }

            } catch (error) {
               
                alert('Errore nell\'iscrizione al progetto, riprova.');
            }
        }

        document.getElementById('iscrizioneForm').addEventListener('submit', async function (e) {
            e.preventDefault();
            await iscriviUtente();
        });



                async function creaProgetto() {
            const nome = document.getElementById('nome').value;
            const password = document.getElementById('password').value;
            let dataInizio = document.getElementById('dataInizio').value;
            let dataFine = document.getElementById('dataFine').value;
            const adminId = getCookie('userId');

           
            let dataInizioDate = new Date(dataInizio);
            let dataFineDate = new Date(dataFine);


            let now = new Date();
            if (dataInizioDate < now) {
                alert("Errore: La data di inizio non può essere nel passato.");
                return;
            }

            if (dataFineDate <= dataInizioDate) {
                alert("Errore: La data di fine deve essere successiva alla data di inizio.");
                return;
            }

            dataInizio = dataInizioDate.toISOString();
            dataFine = dataFineDate.toISOString();

            try {
                const response = await fetch('/api/progetti/CreaProgetto', {
                    method: 'POST',
                    body: new URLSearchParams({
                        nome: nome,
                        password: password,
                        dataInizio: dataInizio,
                        dataFine: dataFine,
                        adminId: adminId
                    }),
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded'
                    }
                });

                if (response.ok) {
                    const result = await response.json();
                    window.location.href = "/Home/Index";
                } else {
                    const errorText = await response.text();
                    console.error("Errore nella creazione del progetto:", errorText);
                    alert("Errore nella creazione del progetto: " + errorText);
                }
            } catch (error) {
                console.error("Errore nella creazione del progetto:", error);
                alert("Errore nella creazione del progetto, riprova.");
            }
        }


        document.getElementById('progettoForm').addEventListener('submit', async function (e) {
            e.preventDefault();
            await creaProgetto();
        });



        async function getUserProject() {
                    const userId = getCookie('userId');
                    if (!userId) {
                        window.location.href = "/Aut/Login";
                        return;
                    }

                    try {
                        const response = await fetch(`/api/Utente/progetti/${userId}`);
                        if (!response.ok) {
                            console.error("Errore API:", response.statusText);
                            return;
                        }

                        const progetti = await response.json();
                        const progettiList = document.getElementById('progettiList');
                        if (progettiList) {
                            progettiList.innerHTML = "";
                            progetti.forEach(progetto => {
                                const listItem = document.createElement("li");
                                const link = document.createElement("a");
                                link.href = `/progetto/dettagli/${progetto.id}`;
                                link.textContent = progetto.nome;
                                link.classList.add("list-group-item", "list-group-item-action");
                                listItem.appendChild(link);
                                progettiList.appendChild(listItem);
                            });
                        }
                    } catch (error) {
                        console.error("Errore nella richiesta API:", error);
                    }
        }



        async function getTaskGraph() {
            const userId = getCookie('userId');
            if (!userId) {
                window.location.href = "/Aut/Login";
                return;
            }

            try {
                console.log("Recupero task per l'utente:", userId);

                const tasksResponse = await fetch(`/api/TaskProgetto/utente/${userId}`);
                if (!tasksResponse.ok) {
                    console.error("Errore nel recupero delle task:", tasksResponse.statusText);
                    return;
                }

                const tasks = await tasksResponse.json();
                const tasksPerMonth = new Array(12).fill(0);
                const currentYear = new Date().getFullYear();

                if (tasks.length === 0) {
                    console.warn("Nessuna task recuperata.");
                }

                tasks.forEach((task, index) => {
                    if (!task.dataInizioTask) {
                        console.warn(`Task #${index} senza dataInizioTask`, task);
                        return;
                    }

                    const taskDate = new Date(task.dataInizioTask);
                    console.log(`Task #${index}: Data ${task.dataInizioTask}, Interpretata come:`, taskDate);

                    if (isNaN(taskDate.getTime())) {
                        console.error(`Data non valida per Task #${index}:`, task.dataInizioTask);
                        return;
                    }

                    if (taskDate.getFullYear() === currentYear) {
                        const monthIndex = taskDate.getMonth();
                        tasksPerMonth[monthIndex]++;
                    }
                });

                const apiUrl = `/api/QuickChart/tasks-participation?${tasksPerMonth.map(value => `tasksPerMonth=${value}`).join('&')}`;
                const chartResponse = await fetch(apiUrl);
                if (!chartResponse.ok) {
                    console.error("Errore nella richiesta API per il grafico:", chartResponse.statusText);
                    return;
                }

                const imageArrayBuffer = await chartResponse.arrayBuffer();
                const base64String = arrayBufferToBase64(imageArrayBuffer);

                const img = document.createElement('img');
                img.src = `data:image/png;base64,${base64String}`;
                img.alt = "Grafico delle task nel tempo";
                img.style.maxWidth = '100%';

                document.getElementById('chartContainer').appendChild(img);
            } catch (error) {
                console.error("Errore nella richiesta API:", error);
            }
        }

        function arrayBufferToBase64(buffer) {
            let binary = '';
            const bytes = new Uint8Array(buffer);
            const length = bytes.byteLength;
            for (let i = 0; i < length; i++) {
                binary += String.fromCharCode(bytes[i]);
            }
            return window.btoa(binary);
        }

        getUserProfile();
        getUserProject();
        getTaskGraph();
    </script>
}
